name: Tests

on:
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  php-tests:
    name: PHP ${{ matrix.php-versions }} Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP environment
        uses: ./.github/actions/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, json, mysql, xml
          coverage: xdebug
          tools: composer, phpunit

      - name: Setup environment for tests
        run: |
          cp .env-sample .env
          echo "app.baseURL = 'http://localhost:8080/'" >> .env
          echo "database.tests.hostname = 127.0.0.1" >> .env
          echo "database.tests.database = test_db" >> .env
          echo "database.tests.username = root" >> .env
          echo "database.tests.password = root" >> .env

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run unit tests
        run: vendor/bin/phpunit --testsuite "App" --filter "unit" --exclude-group database

      - name: Generate coverage report
        run: |
          mkdir -p build/logs
          vendor/bin/phpunit --coverage-clover build/logs/clover.xml tests/unit/HealthTest.php

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./build/logs/clover.xml
          fail_ci_if_error: false

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: ./.github/actions/setup-node

      - name: Run build process
        run: npm run build

  docksal-tests:
    name: Docksal Build Test
    runs-on: ubuntu-latest
    steps:
      - name: Run Docksal installer
        run: curl -fsSL https://get.docksal.io | bash

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize Docksal project
        run: fin init

      - name: Run code checks and admin commands
        run: |
          fin sniff
          fin shellcheck
          fin admin